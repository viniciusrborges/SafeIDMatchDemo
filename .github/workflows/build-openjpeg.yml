name: build-openjpeg-android

on:
  workflow_dispatch: {}
  push:
    paths:
      - ".github/workflows/build-openjpeg.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a]   # pode deixar sÃ³ arm64-v8a se quiser
    steps:
      - uses: actions/checkout@v4

      - name: Setup NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: false

      - name: Install CMake + Ninja
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build

      - name: Fetch OpenJPEG
        run: git clone --depth 1 --branch v2.5.2 https://github.com/uclouvain/openjpeg.git openjpeg

      - name: Configure (${{ matrix.abi }})
        run: |
          cmake -S openjpeg -B build-${{ matrix.abi }} -G Ninja \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_TOOLCHAIN_FILE="${{ steps.setup-ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake" \
            -D ANDROID_ABI=${{ matrix.abi }} \
            -D ANDROID_PLATFORM=android-21 \
            -D BUILD_SHARED_LIBS=ON

      - name: Build (${{ matrix.abi }})
        run: cmake --build build-${{ matrix.abi }} --config Release -j 4

      - name: Locate .so
        id: findso
        run: |
          SO=$(find build-${{ matrix.abi }} -name "libopenjp2.so" | head -n 1)
          echo "so=$SO" >> $GITHUB_OUTPUT

      - name: Upload lib (.so)
        uses: actions/upload-artifact@v4
        with:
          name: libopenjp2-${{ matrix.abi }}
          path: ${{ steps.findso.outputs.so }}

      # === NOVO: empacota headers ===
      - name: Package headers
        run: |
          mkdir -p dist/include/openjpeg
          # headers "fontes" do repo
          cp -R openjpeg/src/lib/openjp2/*.h dist/include/openjpeg/ || true
          # opj_config.h GERADO pela config (precisa desse!)
          if [ -f build-${{ matrix.abi }}/src/lib/openjp2/opj_config.h ]; then
            cp build-${{ matrix.abi }}/src/lib/openjp2/opj_config.h dist/include/openjpeg/
          fi
          # Faz um zip pra baixar de uma vez
          (cd dist && zip -r openjpeg-headers.zip include)

      - name: Upload headers
        uses: actions/upload-artifact@v4
        with:
          name: openjpeg-headers-${{ matrix.abi }}
          path: dist/openjpeg-headers.zip
